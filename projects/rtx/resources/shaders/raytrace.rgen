#version 460
#extension GL_EXT_ray_tracing : require

// A location for a ray payload (we can have multiple of these)
layout(location = 0) rayPayloadEXT RayPayload pay;

layout(binding = 0, set = 0, rgba32f) uniform image2D outImg;           // the output image -> maybe use 16 bit values?
layout(binding = 1, set = 0) uniform accelerationStructureEXT tlas;     // top level acceleration structure (for the noobs here (you!))

layout( push_constant ) uniform constants {     // TODO: add push_constants in main.cpp!
    vec4 camera_position;   // as origin for ray generation
    vec4 camera_right;      // for computing ray direction
    vec4 camera_up;         // for computing ray direction
    vec4 camera_forward;    // for computing ray direction

    uint frameCount;        // what is this? the actual frame?
};


void main() {
    // TODO
}