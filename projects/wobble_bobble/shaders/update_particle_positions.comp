#version 450
#extension GL_GOOGLE_include_directive : enable

layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

#include "particle.inc"

layout(set=0, binding=0, std430) buffer particleBuffer {
    Particle particles [];
};

layout( push_constant ) uniform constants {
    float t;
    float dt;
};

void main()	{
    memoryBarrierBuffer();

    if (gl_GlobalInvocationID.x < particles.length()) {
        vec3 position = particles[gl_GlobalInvocationID.x].minimal.position;
        float size = particles[gl_GlobalInvocationID.x].minimal.size;
        vec3 velocity = particles[gl_GlobalInvocationID.x].minimal.velocity;

        if (dt > 0.0f) {
            position = position + velocity * dt;
        }

        for (uint i = 0; i < 3; i++) {
            if (position[i] - size < 0.0f) {
                position[i] = -position[i] + 2.0f * size;
                velocity[i] *= -1.0f;
            } else
            if (position[i] + size > 1.0f) {
                position[i] = 2.0f * (1.0f - size) - position[i];
                velocity[i] *= -1.0f;
            }
        }

        particles[gl_GlobalInvocationID.x].minimal.position = position;
        particles[gl_GlobalInvocationID.x].minimal.velocity = velocity;
    }

    memoryBarrierBuffer();
}