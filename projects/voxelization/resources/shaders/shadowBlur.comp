#version 450
#extension GL_GOOGLE_include_directive : enable

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(set=0, binding=0)                    uniform texture2D   srcTexture;
layout(set=0, binding=1)                    uniform sampler     depthSampler;                
layout(set=0, binding=2, rgba16)    uniform image2D     outImage;

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

void main(){

    if(any(greaterThanEqual(gl_GlobalInvocationID.xy, imageSize(outImage)))){
        return;
    }
    ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
    
    int blurRadius  = 5;
    int minOffset   = -(blurRadius-1) / 2;
    int maxOffset   = -minOffset;
    
    vec2 pixelSize = vec2(1) / textureSize(sampler2D(srcTexture, depthSampler), 0);
    
    float wTotal = 0;
    vec4 moments = vec4(0);
    
    float weights1D[3] = { 0.5, 0.25, 0.125 };    // gaussian
    
    for(int x = minOffset; x <= maxOffset; x++){
        for(int y = minOffset; y <= maxOffset; y++){
            vec2 uv = (coord + ivec2(x, y)) * pixelSize;
            uv      += 0.5 * pixelSize * sign(vec2(x, y)); // half pixel shift to take advantage of bilinear filtering
            float w = weights1D[abs(x)] * weights1D[abs(y)];
            moments += w * texture(sampler2D(srcTexture, depthSampler), uv);
            wTotal  += w;
        }
    }
    moments /= wTotal;
    
    imageStore(outImage, coord, moments);
}