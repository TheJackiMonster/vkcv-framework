#version 450
#extension GL_GOOGLE_include_directive : enable
#extension GL_ARB_texture_multisample : enable

#include "shadowMapping.inc"

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(set=0, binding=0)                    uniform texture2DMS srcTexture;
layout(set=0, binding=1)                    uniform sampler     depthSampler;                
layout(set=0, binding=2, rgba16)            uniform image2D     outImage;

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout( push_constant ) uniform constants{
    int msaaCount;
};

void main(){

    if(any(greaterThanEqual(gl_GlobalInvocationID.xy, imageSize(outImage)))){
        return;
    }
    ivec2 uv = ivec2(gl_GlobalInvocationID.xy);

    float z = 0;
    for(int i = 0; i < msaaCount; i++){
        z += texelFetch(sampler2DMS(srcTexture, depthSampler), uv, i).r;
    }
    z /= msaaCount;
    z = 2 * z - 1;	// algorithm expects depth in range [-1:1]
	
    float   z2                  = z*z;   
    vec4    moments             = vec4(z, z2, z2*z, z2*z2);
    vec4    momentsQuantized    = quantizeMoments(moments);
	
    imageStore(outImage, uv, momentsQuantized);
}