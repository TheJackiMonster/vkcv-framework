#version 450 core
#extension GL_ARB_separate_shader_objects : enable

layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

struct Particle
{
    vec3 position;
    float lifeTime;
    vec3 velocity;
    float padding_2;
};

layout(std430, binding = 0) coherent buffer buffer_inParticle
{
    Particle inParticle[];
};

layout( push_constant ) uniform constants{
    vec3 respawnPos;
    float deltaTime;
};

void main() {
    uint id = gl_GlobalInvocationID.x;
    inParticle[id].lifeTime -= deltaTime;
    if(inParticle[id].lifeTime < 0.f)
    {
        inParticle[id].lifeTime = 3.f;
        inParticle[id].position = respawnPos;
    }

    inParticle[id].position = (inParticle[id].position + deltaTime * inParticle[id].velocity);
}
