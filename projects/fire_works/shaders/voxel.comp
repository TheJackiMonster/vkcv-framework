#version 450 core
#extension GL_GOOGLE_include_directive : enable
#extension GL_ARB_separate_shader_objects : enable

layout(local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

#include "physics.inc"
#include "voxel.inc"

layout(set=0, binding=0, r32ui) restrict readonly uniform uimage3D voxelRed;
layout(set=0, binding=1, r32ui) restrict readonly uniform uimage3D voxelGreen;
layout(set=0, binding=2, r32ui) restrict readonly uniform uimage3D voxelBlue;
layout(set=0, binding=3, r32ui) restrict readonly uniform uimage3D voxelDensity;

layout(set=1, binding=0, rgba16) restrict writeonly uniform image3D voxelImage;

void main() {
    ivec3 pos = ivec3(gl_GlobalInvocationID);
    ivec3 size = imageSize(voxelImage);

    if (any(greaterThanEqual(pos, size))) {
        return;
    }

    const float red = voxel_read(voxelRed, pos);
    const float green = voxel_read(voxelGreen, pos);
    const float blue = voxel_read(voxelBlue, pos);
    const float density = voxel_read(voxelDensity, pos);

    imageStore(voxelImage, pos, vec4(
        red,
        green,
        blue,
        density
    ));
}
